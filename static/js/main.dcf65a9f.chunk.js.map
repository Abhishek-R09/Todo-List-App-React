{"version":3,"sources":["components/TaskLists/TaskList/Task/Task.module.css","components/TopBar/TopBar.module.css","components/TaskLists/TaskList/TaskList.module.css","components/Auth/Login/Login.module.css","components/UI/Checkbox/Checkbox.module.css","components/TaskLists/TaskLists.module.css","components/UI/Input/Input.module.css","components/UI/FormButton/FormButton.module.css","components/Auth/Signup/Signup.module.css","components/UI/Loader/Loader.module.css","components/UI/AddButton/AddButton.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Input/Input.js","components/UI/Checkbox/Checkbox.js","components/UI/FormButton/FormButton.js","utility.js","store/actions/actionTypes.js","store/actions/login.js","store/actions/signup.js","store/actions/auth.js","components/Auth/Login/Login.js","components/Auth/Signup/Signup.js","components/Auth/Logout/Logout.js","assets/images/companyLogo.png","components/UI/Loader/Loader.js","components/TopBar/TopBar.js","components/UI/AddButton/AddButton.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/TaskLists/TaskList/Task/Task.js","components/TaskLists/TaskList/TaskList.js","store/actions/taskLists.js","components/TaskLists/TaskLists.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/tasksReducer.js","index.js"],"names":["module","exports","input","props","className","classes","Input","label","type","placeholder","ph","onChange","changed","value","style","border","invalid","touched","checkbox","container","checked","checkmark","valid","formButton","disabled","FormButton","btnTxt","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","emailRegex","test","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGOUT","ADD_TASK_LIST","DELETE_TASK_LIST","ADD_TASK","DELETE_TASK","TOGGLE_COMPLETED_TASK","UPDATE_TASK_NAME","UPDATE_TASK_DETAILS","UPDATE_TASK_DATE","login","email","password","dispatch","localStorage","setItem","actionTypes","loginSuccess","signup","username","signupSuccess","logout","removeItem","authCheckState","getItem","authSuccess","connect","state","isAuthenticated","auth","onLogin","actions","useState","formIsValid","setFormIsValid","validation","inputEmail","setInputEmail","inputPassword","setInputPassword","inputCheckbox","setInputCheckbox","useEffect","formValidation","inputChangedHandler","event","prevState","target","Login","to","padding","margin","onSubmit","preventDefault","history","replace","marginBottom","Checkbox","forgotPass","onSignup","inputUsername","setInputUsername","Signup","console","log","onLogout","loader","withRouter","profileState","setProfileState","randomNum","Math","floor","random","axios","get","crossDomain","then","response","data","download_url","catch","error","onLoggedIn","Fragment","TopLink","src","alt","Profile","Loader","onLoggedOut","location","pathname","TopBar","companyLogo","CompanyLogo","addButton","AddButton","onClick","clicked","fontSize","backdrop","show","Backdrop","Modal","modalClosed","transform","opacity","children","Task","showDetails","setShowDetails","taskClasses","push","modalChildren","CloseIcon","delete","closeModal","titleChanged","content","detailsChanged","DateChanged","showEdit","join","flexDirection","display","width","color","TaskName","marginLeft","cursor","edit","TaskDate","date","taskLists","tasks","onAddTask","title","listNo","onTaskChecked","taskNo","onTaskTitleChanged","newVal","onTaskDetailsChanged","onTaskDateChanged","onDeleteTask","showEditMenu","setShowEditMenu","newTaskInput","setNewTaskInput","editTaskHandler","TaskList","FirstRow","fontWeight","id","DeleteTaskList","onDelete","SecondRow","height","alignItems","justifyContent","NewTaskInput","completedTasks","alignSelf","map","task","index","details","taskTitleChangedHandler","taskDetailsChangedHandler","taskDateChangedHandler","completed","onAddTaskList","onTaskListDelete","showModal","setShowModal","inputTaskList","setInputTaskList","TaskLists","ModalNewListInput","taskList","totalCompletedTasks","deleteTaskHandler","position","bottom","right","onTryAutoSignup","routes","exact","path","component","Logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","addTaskList","updatedTaskLists","concat","deleteTaskList","filter","addTask","updatedTasks","Date","toLocaleDateString","updatedTaskList","toggleCompletedTask","updatedTask","numOfCompletedTasks","forEach","updateTaskName","updateTaskDetails","updateTaskDate","deleteTask","composeEnhancers","compose","rootReducer","combineReducers","authReducer","tasksReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.dcf65a9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task_Task__2M1IY\",\"TaskName\":\"Task_TaskName__GFUBY\",\"checkbox\":\"Task_checkbox__1mLg2\",\"checked\":\"Task_checked__1xq7T\",\"TaskDate\":\"Task_TaskDate__2FPxi\",\"modalChildren\":\"Task_modalChildren__36tvL\",\"CloseIcon\":\"Task_CloseIcon__18Le0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"TopBar_TopBar__2mTBA\",\"CompanyLogo\":\"TopBar_CompanyLogo__JcrcX\",\"TopLink\":\"TopBar_TopLink__2h5da\",\"Profile\":\"TopBar_Profile__2J3Ju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"TaskList_TaskList__1HboI\",\"FirstRow\":\"TaskList_FirstRow__3AFHr\",\"DeleteTaskList\":\"TaskList_DeleteTaskList__3-2L-\",\"SecondRow\":\"TaskList_SecondRow__15Rxe\",\"NewTaskInput\":\"TaskList_NewTaskInput__2AJR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__3f6hT\",\"forgotPass\":\"Login_forgotPass__1t9yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Checkbox_container__KcgZF\",\"checkmark\":\"Checkbox_checkmark__wrQOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskLists\":\"TaskLists_TaskLists__1ePzG\",\"ModalNewListInput\":\"TaskLists_ModalNewListInput__1yqZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__LWTxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormButton\":\"FormButton_FormButton__1YjHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Signup\":\"Signup_Signup__TYgVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2JzL0\",\"load3\":\"Loader_load3__202KE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddButton\":\"AddButton_AddButton__2cxnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1drYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1UHmi\"};","import classes from \"./Input.module.css\";\r\n\r\nconst input = (props) => {\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label>{props.label}</label>\r\n      <br />\r\n      <input\r\n        type={props.type}\r\n        placeholder={props.ph}\r\n        onChange={props.changed}\r\n        value={props.value}\r\n        style={{\r\n          border: props.invalid && props.touched ? \"1px solid red\" : null,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","import classes from \"./Checkbox.module.css\";\r\n\r\nconst checkbox = (props) => (\r\n  <label className={classes.container}>\r\n    {props.label}\r\n    <input type=\"checkbox\" checked={props.checked} onChange={props.changed} />\r\n    <span\r\n      className={classes.checkmark}\r\n      style={{ border: props.valid ? \"1px solid #dae0ea\" : \"1px solid red\" }}\r\n    ></span>\r\n  </label>\r\n);\r\n\r\nexport default checkbox;\r\n","import classes from \"./FormButton.module.css\";\r\n\r\nconst formButton = (props) => (\r\n  <button\r\n    disabled={props.disabled}\r\n    className={classes.FormButton}\r\n    type=\"submit\"\r\n  >\r\n    {props.btnTxt}\r\n  </button>\r\n);\r\n\r\nexport default formButton;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n  let isValid = true;\r\n  if (rules.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  if (rules.minLength) {\r\n    isValid = value.length >= rules.minLength && isValid;\r\n  }\r\n\r\n  if (rules.maxLength) {\r\n    isValid = value.length <= rules.maxLength && isValid;\r\n  }\r\n\r\n  if (rules.emailRegex) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    isValid = re.test(value) && isValid;\r\n  }\r\n\r\n  return isValid;\r\n};\r\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const ADD_TASK_LIST = \"ADD_TASK_LIST\";\r\nexport const DELETE_TASK_LIST = \"DELETE_TASK_LIST\";\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const TOGGLE_COMPLETED_TASK = \"TOGGLE_COMPLETED_TASK\";\r\nexport const UPDATE_TASK_NAME = \"UPDATE_TASK_NAME\";\r\nexport const UPDATE_TASK_DETAILS = \"UPDATE_TASK_DETAILS\";\r\nexport const UPDATE_TASK_DATE = \"UPDATE_TASK_DATE\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const loginSuccess = (email, password) => {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    email: email,\r\n    password: password,\r\n  };\r\n};\r\n\r\nexport const loginFailure = (error) => {\r\n  return {\r\n    type: actionTypes.LOGIN_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const login = (email, password) => {\r\n  return (dispatch) => {\r\n    localStorage.setItem(\"email\", email);\r\n    localStorage.setItem(\"password\", password);\r\n    localStorage.setItem(\"isAuth\", true);\r\n    dispatch(loginSuccess(email, password));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const signupSuccess = (username, email, password) => {\r\n  return {\r\n    type: actionTypes.SIGNUP_SUCCESS,\r\n    username: username,\r\n    email: email,\r\n    password: password,\r\n  };\r\n};\r\n\r\nexport const signupFailure = (error) => {\r\n  return {\r\n    type: actionTypes.SIGNUP_FAILURE,\r\n    error: error,\r\n  };\r\n};\r\n\r\nexport const signup = (username, email, password) => {\r\n  return (dispatch) => {\r\n    localStorage.setItem(\"username\", username);\r\n    localStorage.setItem(\"email\", email);\r\n    localStorage.setItem(\"password\", password);\r\n    localStorage.setItem(\"isAuth\", true);\r\n    dispatch(signupSuccess(username, email, password));\r\n  };\r\n};\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const authSuccess = (email, password) => {\r\n  return {\r\n    type: actionTypes.LOGIN_SUCCESS,\r\n    email: email,\r\n    password: password,\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"isAuth\");\r\n  localStorage.removeItem(\"email\");\r\n  localStorage.removeItem(\"password\");\r\n  localStorage.removeItem(\"username\");\r\n  return {\r\n    type: actionTypes.LOGOUT,\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    const isAuth = localStorage.getItem(\"isAuth\");\r\n    if (!isAuth) {\r\n      dispatch(logout);\r\n    } else {\r\n      const email = localStorage.getItem(\"email\");\r\n      const password = localStorage.getItem(\"password\");\r\n      dispatch(authSuccess(email, password));\r\n    }\r\n  };\r\n};\r\n","import Input from \"../../UI/Input/Input\";\r\nimport classes from \"./Login.module.css\";\r\nimport Checkbox from \"../../UI/Checkbox/Checkbox\";\r\nimport FormButton from \"../../UI/FormButton/FormButton\";\r\nimport { checkValidity } from \"../../../utility\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [inputEmail, setInputEmail] = useState({\r\n    value: \"\",\r\n    validation: {\r\n      required: true,\r\n      emailRegex: true,\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n  });\r\n  const [inputPassword, setInputPassword] = useState({\r\n    value: \"\",\r\n    validation: {\r\n      required: true,\r\n      minLength: 8,\r\n      maxLength: 16,\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n  });\r\n  const [inputCheckbox, setInputCheckbox] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let formValidation = true;\r\n    formValidation = inputEmail.valid && formValidation;\r\n    formValidation = inputPassword.valid && formValidation;\r\n    setFormIsValid(formValidation);\r\n  }, [inputEmail, inputPassword]);\r\n\r\n  const inputChangedHandler = (event, type) => {\r\n    switch (type) {\r\n      case \"email\":\r\n        setInputEmail((prevState) => ({\r\n          ...prevState,\r\n          value: event.target.value,\r\n          valid: checkValidity(event.target.value, inputEmail.validation),\r\n          touched: true,\r\n        }));\r\n        break;\r\n      case \"password\":\r\n        setInputPassword((prevState) => ({\r\n          ...prevState,\r\n          value: event.target.value,\r\n          valid: checkValidity(event.target.value, inputPassword.validation),\r\n          touched: true,\r\n        }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const checkboxHandler = () => {\r\n    setInputCheckbox((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onLogin(inputEmail.value, inputPassword.value);\r\n\r\n    props.history.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Login}>\r\n      {props.isAuthenticated ? <Redirect to=\"/\" /> : null}\r\n      <h1 style={{ padding: \"0\", margin: \"20px\" }}>Log in!</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <Input\r\n          type=\"email\"\r\n          ph=\"Enter Email\"\r\n          label=\"Email Address\"\r\n          changed={(event) => inputChangedHandler(event, \"email\")}\r\n          value={inputEmail.value}\r\n          invalid={!inputEmail.valid}\r\n          touched={inputEmail.touched}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          ph=\"Enter Password\"\r\n          label=\"Password\"\r\n          changed={(event) => inputChangedHandler(event, \"password\")}\r\n          value={inputPassword.value}\r\n          invalid={!inputPassword.valid}\r\n          touched={inputPassword.touched}\r\n        />\r\n        <div style={{ marginBottom: \"16px\" }}>\r\n          <Checkbox\r\n            label=\"Remember Me\"\r\n            checked={inputCheckbox}\r\n            valid={true}\r\n            changed={checkboxHandler}\r\n          />\r\n          <span className={classes.forgotPass}>Forgot Password?</span>\r\n        </div>\r\n        {/* <button type=\"submit\">Log in</button> */}\r\n        <FormButton btnTxt=\"Log in\" disabled={!formIsValid} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogin: (email, password) => dispatch(actions.login(email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import classes from \"./Signup.module.css\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport Checkbox from \"../../UI/Checkbox/Checkbox\";\r\nimport FormButton from \"../../UI/FormButton/FormButton\";\r\nimport { checkValidity } from \"../../../utility\";\r\nimport * as actions from \"../../../store/actions/index\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Signup = (props) => {\r\n  const [formIsValid, setFormIsValid] = useState(false);\r\n  const [inputUsername, setInputUsername] = useState({\r\n    value: \"\",\r\n    validation: {\r\n      required: true,\r\n      minLength: 5,\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n  });\r\n  const [inputEmail, setInputEmail] = useState({\r\n    value: \"\",\r\n    validation: {\r\n      required: true,\r\n      emailRegex: true,\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n  });\r\n  const [inputPassword, setInputPassword] = useState({\r\n    value: \"\",\r\n    validation: {\r\n      required: true,\r\n      minLength: 8,\r\n      maxLength: 16,\r\n    },\r\n    valid: false,\r\n    touched: false,\r\n  });\r\n  const [inputCheckbox, setInputCheckbox] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let formValidation = true;\r\n    formValidation = inputEmail.valid && formValidation;\r\n    formValidation = inputPassword.valid && formValidation;\r\n    formValidation = inputUsername.valid && formValidation;\r\n    formValidation = inputCheckbox && formValidation;\r\n    setFormIsValid(formValidation);\r\n  }, [inputUsername, inputEmail, inputPassword, inputCheckbox]);\r\n\r\n  const inputChangedHandler = (event, type) => {\r\n    switch (type) {\r\n      case \"username\":\r\n        setInputUsername((prevState) => ({\r\n          ...prevState,\r\n          value: event.target.value,\r\n          valid: checkValidity(event.target.value, inputUsername.validation),\r\n          touched: true,\r\n        }));\r\n        break;\r\n      case \"email\":\r\n        setInputEmail((prevState) => ({\r\n          ...prevState,\r\n          value: event.target.value,\r\n          valid: checkValidity(event.target.value, inputEmail.validation),\r\n          touched: true,\r\n        }));\r\n        break;\r\n      case \"password\":\r\n        setInputPassword((prevState) => ({\r\n          ...prevState,\r\n          value: event.target.value,\r\n          valid: checkValidity(event.target.value, inputPassword.validation),\r\n          touched: true,\r\n        }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const checkboxHandler = () => {\r\n    setInputCheckbox((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submitted\");\r\n    props.onSignup(inputUsername.value, inputEmail.value, inputPassword.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Signup}>\r\n      {props.isAuthenticated ? <Redirect to=\"/\" /> : null}\r\n      <h1 style={{ padding: \"0\", margin: \"20px\" }}>Sign up</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <Input\r\n          type=\"text\"\r\n          ph=\"Enter name\"\r\n          label=\"Username\"\r\n          changed={(event) => inputChangedHandler(event, \"username\")}\r\n          value={inputUsername.value}\r\n          invalid={!inputUsername.valid}\r\n          touched={inputUsername.touched}\r\n        />\r\n        <Input\r\n          type=\"email\"\r\n          ph=\"Enter Email\"\r\n          label=\"Email Address\"\r\n          changed={(event) => inputChangedHandler(event, \"email\")}\r\n          value={inputEmail.value}\r\n          invalid={!inputEmail.valid}\r\n          touched={inputEmail.touched}\r\n        />\r\n        <Input\r\n          type=\"password\"\r\n          ph=\"Enter Password\"\r\n          label=\"Password\"\r\n          changed={(event) => inputChangedHandler(event, \"password\")}\r\n          value={inputPassword.value}\r\n          invalid={!inputPassword.valid}\r\n          touched={inputPassword.touched}\r\n        />\r\n        <div style={{ marginBottom: \"16px\" }}>\r\n          <Checkbox\r\n            label=\"I accept the terms and conditions\"\r\n            checked={inputCheckbox}\r\n            valid={inputCheckbox}\r\n            changed={checkboxHandler}\r\n          />\r\n        </div>\r\n        {/* <button type=\"submit\">Log in</button> */}\r\n        <FormButton btnTxt=\"Sign up\" disabled={!formIsValid} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSignup: (username, email, password) =>\r\n      dispatch(actions.signup(username, email, password)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","import { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nconst Logout = (props) => {\r\n  const { onLogout } = props;\r\n  useEffect(() => {\r\n    onLogout();\r\n  }, [onLogout]);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","export default __webpack_public_path__ + \"static/media/companyLogo.8a58038c.png\";","import classes from \"./Loader.module.css\";\r\n\r\nconst loader = () => <div className={classes.loader}>Loading...</div>;\r\n\r\nexport default loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport companyLogo from \"../../assets/images/companyLogo.png\";\r\nimport classes from \"./TopBar.module.css\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../UI/Loader/Loader\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TopBar = (props) => {\r\n  const [profileState, setProfileState] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const randomNum = Math.floor(Math.random() * 1000);\r\n    axios\r\n      .get(`https://picsum.photos/id/${randomNum}/info`, { crossDomain: true })\r\n      .then((response) => {\r\n        setProfileState(response.data.download_url);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const onLoggedIn = (\r\n    <React.Fragment>\r\n      <div className={classes.TopLink}>\r\n        <Link to=\"/logout\">Signout</Link>\r\n      </div>\r\n      {profileState ? (\r\n        <img src={profileState} alt=\"Profile\" className={classes.Profile} />\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const onLoggedOut = (\r\n    <div className={classes.TopLink}>\r\n      {props.location.pathname === \"/login\" ? (\r\n        <Link to=\"/signup\">Sign up</Link>\r\n      ) : props.location.pathname === \"/signup\" ? (\r\n        <Link to=\"/login\">Log in</Link>\r\n      ) : null}\r\n    </div>\r\n  );\r\n  return (\r\n    <header className={classes.TopBar}>\r\n      <img\r\n        src={companyLogo}\r\n        alt=\"Company Logo\"\r\n        className={classes.CompanyLogo}\r\n      />\r\n      <h1>TasksBoard</h1>\r\n      {props.isAuthenticated ? onLoggedIn : onLoggedOut}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(TopBar));\r\n","import classes from \"./AddButton.module.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst addButton = (props) => (\r\n  <button\r\n    className={classes.AddButton}\r\n    style={props.style}\r\n    onClick={props.clicked}\r\n  >\r\n    <AddIcon fontSize={props.fontSize} />\r\n  </button>\r\n);\r\n\r\nexport default addButton;\r\n","import classes from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = (props) =>\r\n  props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop show={props.show} clicked={props.modalClosed} />\r\n      <div\r\n        className={classes.Modal}\r\n        style={{\r\n          transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\r\n          opacity: props.show ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport classes from \"./Task.module.css\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\n\r\nconst Task = (props) => {\r\n  const [showDetails, setShowDetails] = useState(false);\r\n\r\n  let taskClasses = [classes.checkbox];\r\n  if (props.checked) {\r\n    taskClasses.push(classes.checked);\r\n  }\r\n\r\n  const modalChildren = (\r\n    <div className={classes.modalChildren}>\r\n      <div>\r\n        <span className={classes.CloseIcon} onClick={props.delete}>\r\n          <DeleteOutlineIcon />\r\n        </span>\r\n        <span className={classes.CloseIcon} onClick={props.closeModal}>\r\n          <CloseIcon />\r\n        </span>\r\n      </div>\r\n      {/* <p>Campus Build</p> */}\r\n      <input type=\"text\" value={props.label} onChange={props.titleChanged} />\r\n      <textarea\r\n        placeholder=\"Add details\"\r\n        value={props.content}\r\n        onChange={props.detailsChanged}\r\n      ></textarea>\r\n      <input type=\"date\" placeholder=\"Add Date\" onChange={props.DateChanged} />\r\n    </div>\r\n  );\r\n\r\n  const showDetailsHandler = () => {\r\n    setShowDetails((prevState) => !prevState);\r\n  };\r\n  return (\r\n    <div className={classes.Task}>\r\n      <Modal show={props.showEdit} modalClosed={props.closeModal}>\r\n        {modalChildren}\r\n      </Modal>\r\n      <div className={taskClasses.join(\" \")} onClick={props.clicked}>\r\n        {props.checked ? <DoneIcon /> : null}\r\n      </div>\r\n      <div style={{ flexDirection: \"column\", display: \"flex\", width: \"100%\" }}>\r\n        <div style={{ display: \"flex\", width: \"100%\" }}>\r\n          <span\r\n            style={{ color: props.checked ? \"#007500\" : null }}\r\n            onClick={showDetailsHandler}\r\n            className={classes.TaskName}\r\n          >\r\n            {props.label}\r\n          </span>\r\n          {!props.checked ? (\r\n            <div\r\n              style={{ marginLeft: \"auto\", cursor: \"pointer\" }}\r\n              onClick={props.edit}\r\n            >\r\n              <EditIcon />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {showDetails && !props.checked ? (\r\n          <div style={{ fontSize: \"12px\" }}>\r\n            <p>{props.content}</p>\r\n            <p className={classes.TaskDate}>{props.date}</p>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddButton from \"../../UI/AddButton/AddButton\";\r\nimport Task from \"./Task/Task\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport classes from \"./TaskList.module.css\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nconst TaskList = (props) => {\r\n  const [showEditMenu, setShowEditMenu] = useState(false);\r\n  const [newTaskInput, setNewTaskInput] = useState(\"\");\r\n\r\n  const onCheckedHandler = (taskNo) => {\r\n    props.onTaskChecked(taskNo, props.id);\r\n  };\r\n\r\n  const editTaskHandler = () => {\r\n    setShowEditMenu(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowEditMenu(false);\r\n  };\r\n\r\n  const inputChangedHandler = (event) => {\r\n    setNewTaskInput(event.target.value);\r\n  };\r\n\r\n  const taskTitleChangedHandler = (event, taskNo) => {\r\n    props.onTaskTitleChanged(props.id, taskNo, event.target.value);\r\n  };\r\n\r\n  const taskDetailsChangedHandler = (event, taskNo) => {\r\n    props.onTaskDetailsChanged(props.id, taskNo, event.target.value);\r\n  };\r\n\r\n  const taskDateChangedHandler = (event, taskNo) => {\r\n    props.onTaskDateChanged(props.id, taskNo, event.target.value);\r\n  };\r\n\r\n  const addNewTaskHandler = () => {\r\n    if (newTaskInput === \"\") {\r\n      return;\r\n    }\r\n    props.onAddTask(newTaskInput, props.id);\r\n    setNewTaskInput(\"\");\r\n  };\r\n\r\n  const deleteTaskHandler = (taskNo) => {\r\n    props.onDeleteTask(props.id, taskNo);\r\n    setShowEditMenu(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.TaskList}>\r\n      <div className={classes.FirstRow}>\r\n        <span style={{ fontWeight: \"700\" }}>\r\n          {props.taskLists[props.id].title}\r\n        </span>\r\n        <span className={classes.DeleteTaskList} onClick={props.onDelete}>\r\n          <DeleteOutlineIcon />\r\n        </span>\r\n      </div>\r\n      <div className={classes.SecondRow}>\r\n        <div\r\n          style={{\r\n            marginBottom: \"15px\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <AddButton\r\n            fontSize=\"default\"\r\n            style={{\r\n              width: \"43px\",\r\n              height: \"35px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n            clicked={addNewTaskHandler}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"New Task\"\r\n            className={classes.NewTaskInput}\r\n            onChange={inputChangedHandler}\r\n            value={newTaskInput}\r\n          />\r\n        </div>\r\n        {props.completedTasks ? (\r\n          <p style={{ color: \"#007500\", alignSelf: \"end\", margin: \"10px 0\" }}>\r\n            Completed ({props.completedTasks})\r\n          </p>\r\n        ) : null}\r\n        {props.taskLists[props.id].tasks.map((task, index) => {\r\n          return (\r\n            <Task\r\n              key={`TaskList${props.id}Task${index}`}\r\n              id={index}\r\n              label={task.title}\r\n              content={task.details}\r\n              date={task.date}\r\n              clicked={() => onCheckedHandler(index)}\r\n              titleChanged={(event) => taskTitleChangedHandler(event, index)}\r\n              detailsChanged={(event) =>\r\n                taskDetailsChangedHandler(event, index)\r\n              }\r\n              DateChanged={(event) => taskDateChangedHandler(event, index)}\r\n              delete={() => deleteTaskHandler(index)}\r\n              checked={props.taskLists[props.id].tasks[index].completed}\r\n              edit={editTaskHandler}\r\n              showEdit={showEditMenu}\r\n              closeModal={closeModal}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    taskLists: state.tasks.taskLists,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddTask: (title, listNo) => dispatch(actions.addNewTask(title, listNo)),\r\n    onTaskChecked: (taskNo, listNo) =>\r\n      dispatch(actions.toggleCompletedTask(taskNo, listNo)),\r\n    onTaskTitleChanged: (listNo, taskNo, newVal) =>\r\n      dispatch(actions.updateTaskName(listNo, taskNo, newVal)),\r\n    onTaskDetailsChanged: (listNo, taskNo, newVal) =>\r\n      dispatch(actions.updateTaskDetails(listNo, taskNo, newVal)),\r\n    onTaskDateChanged: (listNo, taskNo, newVal) =>\r\n      dispatch(actions.updateTaskDate(listNo, taskNo, newVal)),\r\n    onDeleteTask: (listNo, taskNo) =>\r\n      dispatch(actions.deleteTask(listNo, taskNo)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const addNewTaskList = (title) => {\r\n  return { type: actionTypes.ADD_TASK_LIST, title: title };\r\n};\r\n\r\nexport const deleteTaskList = (index) => {\r\n  return { type: actionTypes.DELETE_TASK_LIST, index: index };\r\n};\r\n\r\nexport const addNewTask = (title, listNo) => {\r\n  return { type: actionTypes.ADD_TASK, title: title, listNo: listNo };\r\n};\r\n\r\nexport const toggleCompletedTask = (taskNo, listNo) => {\r\n  return { type: actionTypes.TOGGLE_COMPLETED_TASK, taskNo, listNo };\r\n};\r\n\r\nexport const updateTaskName = (listNo, taskNo, newVal) => {\r\n  return {\r\n    type: actionTypes.UPDATE_TASK_NAME,\r\n    listNo: listNo,\r\n    taskNo: taskNo,\r\n    newVal: newVal,\r\n  };\r\n};\r\n\r\nexport const updateTaskDetails = (listNo, taskNo, newVal) => {\r\n  return {\r\n    type: actionTypes.UPDATE_TASK_DETAILS,\r\n    listNo: listNo,\r\n    taskNo: taskNo,\r\n    newVal: newVal,\r\n  };\r\n};\r\n\r\nexport const updateTaskDate = (listNo, taskNo, newVal) => {\r\n  return {\r\n    type: actionTypes.UPDATE_TASK_DATE,\r\n    listNo: listNo,\r\n    taskNo: taskNo,\r\n    newVal: newVal,\r\n  };\r\n};\r\n\r\nexport const deleteTask = (listNo, taskNo) => {\r\n  return {\r\n    type: actionTypes.DELETE_TASK,\r\n    listNo: listNo,\r\n    taskNo: taskNo,\r\n  };\r\n};\r\n","import classes from \"./TaskLists.module.css\";\r\nimport TaskList from \"./TaskList/TaskList\";\r\nimport AddButton from \"../UI/AddButton/AddButton\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\nconst TaskLists = (props) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [inputTaskList, setInputTaskList] = useState(\"\");\r\n\r\n  const addTaskListHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const inputChangedHandler = (event) => {\r\n    setInputTaskList(event.target.value);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const addNewTaskListHandler = () => {\r\n    if (inputTaskList === \"\") {\r\n      return;\r\n    }\r\n    props.onAddTaskList(inputTaskList);\r\n    setShowModal(false);\r\n    setInputTaskList(\"\");\r\n  };\r\n\r\n  const deleteTaskHandler = (index) => {\r\n    props.onTaskListDelete(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.TaskLists}>\r\n      <Modal show={showModal} modalClosed={closeModalHandler}>\r\n        {/* <p>New List</p> */}\r\n        <input\r\n          className={classes.ModalNewListInput}\r\n          type=\"text\"\r\n          placeholder=\"New List\"\r\n          onChange={inputChangedHandler}\r\n          value={inputTaskList}\r\n        />\r\n        <AddButton\r\n          style={{ marginLeft: \"auto\" }}\r\n          clicked={addNewTaskListHandler}\r\n        />\r\n      </Modal>\r\n      {props.taskLists.map((taskList, index) => {\r\n        return (\r\n          <TaskList\r\n            key={`TaskList${index}`}\r\n            id={index}\r\n            completedTasks={taskList.totalCompletedTasks}\r\n            onDelete={() => deleteTaskHandler(index)}\r\n          />\r\n        );\r\n      })}\r\n      <AddButton\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"30px\",\r\n          right: \"30px\",\r\n          width: \"50px\",\r\n          height: \"50px\",\r\n        }}\r\n        fontSize=\"large\"\r\n        clicked={addTaskListHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    taskLists: state.tasks.taskLists,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddTaskList: (title) => dispatch(actions.addNewTaskList(title)),\r\n    onTaskListDelete: (index) => dispatch(actions.deleteTaskList(index)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskLists);\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Signup from \"./components/Auth/Signup/Signup\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport TopBar from \"./components/TopBar/TopBar\";\nimport TaskLists from \"./components/TaskLists/TaskLists\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./store/actions/index\";\n\nconst App = (props) => {\n  useEffect(() => {\n    // console.log(props.isAuthenticated);\n    props.onTryAutoSignup();\n  }, [props]);\n\n  let routes = (\n    <Switch>\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Redirect to=\"/login\" />\n    </Switch>\n  );\n\n  if (props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route exact path=\"/logout\" component={Logout} />\n        <Route exact path=\"/\" component={TaskLists} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  }\n  return (\n    <React.Fragment>\n      <div className=\"App\">\n        <TopBar />\n        {routes}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  username: null,\r\n  email: null,\r\n  password: null,\r\n  error: false,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        email: action.email,\r\n        password: action.password,\r\n        error: false,\r\n        isAuthenticated: true,\r\n      };\r\n    case actionTypes.LOGIN_FAILURE:\r\n      return { ...state, error: action.error, isAuthenticated: false };\r\n    case actionTypes.SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        username: action.username,\r\n        email: action.email,\r\n        password: action.password,\r\n        error: false,\r\n        isAuthenticated: true,\r\n      };\r\n    case actionTypes.SIGNUP_FAILURE:\r\n      return { ...state, error: action.error, isAuthenticated: false };\r\n    case actionTypes.LOGOUT:\r\n      return {\r\n        ...state,\r\n        username: null,\r\n        email: null,\r\n        password: null,\r\n        error: false,\r\n        isAuthenticated: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  taskLists: [\r\n    {\r\n      title: \"My Task\",\r\n      tasks: [\r\n        {\r\n          title: \"Sample Task\",\r\n          details: \"Lorem ipsum dolor\",\r\n          date: null,\r\n          completed: false,\r\n        },\r\n      ],\r\n      totalCompletedTasks: 0,\r\n    },\r\n  ],\r\n};\r\n\r\nconst addTaskList = (state, action) => {\r\n  const taskLists = [...state.taskLists];\r\n  const updatedTaskLists = taskLists.concat({\r\n    title: action.title,\r\n    tasks: [],\r\n  });\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst deleteTaskList = (state, action) => {\r\n  const currTaskLists = [...state.taskLists];\r\n  const updatedTaskLists = currTaskLists.filter((taskList, index) => {\r\n    return index !== action.index;\r\n  });\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst addTask = (state, action) => {\r\n  const tasks = [...state.taskLists[action.listNo].tasks];\r\n  const updatedTasks = tasks.concat({\r\n    title: action.title,\r\n    details: \"\",\r\n    date: new Date().toLocaleDateString(),\r\n  });\r\n  const updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: updatedTasks,\r\n  };\r\n  const updatedTaskLists = [...state.taskLists];\r\n  updatedTaskLists[action.listNo] = updatedTaskList;\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst toggleCompletedTask = (state, action) => {\r\n  const updatedTask = {\r\n    ...state.taskLists[action.listNo].tasks[action.taskNo],\r\n    completed: !state.taskLists[action.listNo].tasks[action.taskNo].completed,\r\n  };\r\n  const tasks = [...state.taskLists[action.listNo].tasks];\r\n  tasks[action.taskNo] = updatedTask;\r\n  let updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: tasks,\r\n  };\r\n  let numOfCompletedTasks = 0;\r\n  updatedTaskList.tasks.forEach((task) => {\r\n    if (task.completed) {\r\n      numOfCompletedTasks += 1;\r\n    }\r\n  });\r\n  updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: tasks,\r\n    totalCompletedTasks: numOfCompletedTasks,\r\n  };\r\n  const updatedTaskLists = [...state.taskLists];\r\n  updatedTaskLists[action.listNo] = updatedTaskList;\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst updateTaskName = (state, action) => {\r\n  const updatedTask = {\r\n    ...state.taskLists[action.listNo].tasks[action.taskNo],\r\n    title: action.newVal,\r\n  };\r\n  const tasks = [...state.taskLists[action.listNo].tasks];\r\n  tasks[action.taskNo] = updatedTask;\r\n  const updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: tasks,\r\n  };\r\n  const updatedTaskLists = [...state.taskLists];\r\n  updatedTaskLists[action.listNo] = updatedTaskList;\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst updateTaskDetails = (state, action) => {\r\n  const updatedTask = {\r\n    ...state.taskLists[action.listNo].tasks[action.taskNo],\r\n    details: action.newVal,\r\n  };\r\n  const tasks = [...state.taskLists[action.listNo].tasks];\r\n  tasks[action.taskNo] = updatedTask;\r\n  const updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: tasks,\r\n  };\r\n  const updatedTaskLists = [...state.taskLists];\r\n  updatedTaskLists[action.listNo] = updatedTaskList;\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst updateTaskDate = (state, action) => {\r\n  const updatedTask = {\r\n    ...state.taskLists[action.listNo].tasks[action.taskNo],\r\n    date: action.newVal,\r\n  };\r\n  const tasks = [...state.taskLists[action.listNo].tasks];\r\n  tasks[action.taskNo] = updatedTask;\r\n  const updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: tasks,\r\n  };\r\n  const updatedTaskLists = [...state.taskLists];\r\n  updatedTaskLists[action.listNo] = updatedTaskList;\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst deleteTask = (state, action) => {\r\n  const tasks = [...state.taskLists[action.listNo].tasks];\r\n  const updatedTasks = tasks.filter((task, index) => {\r\n    return index !== action.taskNo;\r\n  });\r\n  let updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: updatedTasks,\r\n  };\r\n  let numOfCompletedTasks = 0;\r\n  updatedTaskList.tasks.forEach((task) => {\r\n    if (task.completed) {\r\n      numOfCompletedTasks += 1;\r\n    }\r\n  });\r\n  updatedTaskList = {\r\n    ...state.taskLists[action.listNo],\r\n    tasks: updatedTasks,\r\n    totalCompletedTasks: numOfCompletedTasks,\r\n  };\r\n  const updatedTaskLists = [...state.taskLists];\r\n  updatedTaskLists[action.listNo] = updatedTaskList;\r\n  return { ...state, taskLists: updatedTaskLists };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TASK_LIST:\r\n      return addTaskList(state, action);\r\n    case actionTypes.DELETE_TASK_LIST:\r\n      return deleteTaskList(state, action);\r\n    case actionTypes.ADD_TASK:\r\n      return addTask(state, action);\r\n    case actionTypes.TOGGLE_COMPLETED_TASK:\r\n      return toggleCompletedTask(state, action);\r\n    case actionTypes.UPDATE_TASK_NAME:\r\n      return updateTaskName(state, action);\r\n    case actionTypes.UPDATE_TASK_DETAILS:\r\n      return updateTaskDetails(state, action);\r\n    case actionTypes.UPDATE_TASK_DATE:\r\n      return updateTaskDate(state, action);\r\n    case actionTypes.DELETE_TASK:\r\n      return deleteTask(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport authReducer from \"./store/reducers/authReducer\";\nimport tasksReducer from \"./store/reducers/tasksReducer\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({ auth: authReducer, tasks: tasksReducer });\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename=\"/Todo-List-App-React\">\n        <App />\n      </HashRouter>\n      {/* </BrowserRouter> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}